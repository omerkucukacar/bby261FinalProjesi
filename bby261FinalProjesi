{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Welcome To Colaboratory",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/omerkucukacar/bby261FinalProjesi/blob/master/bby261FinalProjesi\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jIrP3qquEcOr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "\n",
        "from keras.datasets import mnist\n",
        "import matplotlib.pyplot as plt\n",
        "from IPython.display import Image\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PFGBjwCJEcSX",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "(X_train, y_train), (X_test, y_test) = mnist.load_data()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0otft3TWEcZO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "trainX = X_train.reshape((X_train.shape[0], 28, 28, 1))\n",
        "testX = X_test.reshape((X_test.shape[0], 28, 28, 1))\n",
        "trainX = trainX/255\n",
        "testX = testX/255"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LYcoKEgTotkc",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "el_yazisi = [\n",
        "               '0', \n",
        "              '1', \n",
        "               '2',\n",
        "               '3', \n",
        "              '4',\n",
        "               '5',\n",
        "               '6', \n",
        "               '7',\n",
        "               '8', \n",
        "               '9']\n",
        "\n",
        "\n",
        "\n",
        "               "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cYVICwxSmdFP",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e79c9348-3aac-4880-e15f-b2544bb21ea8"
      },
      "source": [
        "X_train.shape\n"
      ],
      "execution_count": 528,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(60000, 28, 28)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 528
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QcQmrUqYmh3u",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "c0f1c8d4-fc42-4f48-cabb-c1fa194bf296"
      },
      "source": [
        "len(y_train)"
      ],
      "execution_count": 529,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "60000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 529
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6yWvdr_XoynO",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "1ec848db-a7b4-4a79-f825-fd6f41e37b29"
      },
      "source": [
        "y_train"
      ],
      "execution_count": 530,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([5, 0, 4, ..., 5, 6, 8], dtype=uint8)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 530
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y6arFwyCmudk",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "18223c53-3e22-4375-acd8-f650733a3303"
      },
      "source": [
        "X_test.shape"
      ],
      "execution_count": 531,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10000, 28, 28)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 531
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gW5g8Xp5mynQ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "1287c88a-fa04-4261-ec94-6e1a00506761"
      },
      "source": [
        "len(y_test)"
      ],
      "execution_count": 532,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 532
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KxRvC1j2EcV7",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "af98a504-88dc-496c-ae7e-5c113988d4bb"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "plt.imshow(X_train[0])\n",
        "plt.colorbar()\n",
        "plt.grid(False)\n",
        "plt.show()\n",
        "# show the plot\n",
        "plt.show()\n",
        "\n",
        "\n",
        "\n"
      ],
      "execution_count": 533,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0NdOzBxxmLc1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X_train = X_train / 255.0\n",
        "\n",
        "X_test = X_test / 255.0"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wY2WHP8MpuQ0",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 589
        },
        "outputId": "35213c3c-15be-4e45-c444-382e59a576dd"
      },
      "source": [
        "plt.figure(figsize=(10,10))\n",
        "for i in range(16):\n",
        "    plt.subplot(4,4,i+1)\n",
        "    plt.xticks([])\n",
        "    plt.yticks([])\n",
        "    plt.grid(False)\n",
        "    plt.imshow(X_train[i], cmap=plt.cm.binary)\n",
        "    plt.xlabel(el_yazisi[y_train[i]])\n",
        "plt.show()"
      ],
      "execution_count": 535,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nB5nJGFPMGLPQGPNR2LUg8xhjXjfGbDDGLA27lnRAwxNZa2ttY2ttdtiFIPMYY4qJyHMico6INBSR\ny4wxDcOtChmqv4gsD7sIZKw3ROTssItIFzQ8QOI1FZHV1tr/Wmv3iMhYEekUck3IMMaY6iJynoi8\nGnYtyEzW2pkisinsOtIFDU+QFZGpxpgcY0yvsItBRqomIj8ekNflHwPi8ZSI3Coi+8IuBPABDU/Q\nGdbak2X/1xE3GWNahF0QgKLFGHO+iGyw1uaEXQvgCxoeh7X2p/z/3SAi78v+ryeAePwkIjUOyNXz\njwEF1VxEOhpjcmX/V6JtjDGjwi0JyGw0PAcwxpQ1xpT7378XkfYiwnQ74jVPROoYY441xpQUkW4i\n8mHINSGDWGvvsNZWt9Zmyf7753NrbfeQywIyGg2PdpSIfGWMWSwiX4vIJGvtlJBrQoax1v4lIn1E\n5BPZ/ydsxltrvw23KgBFjTFmjIjMFpF6xph1xphrw64pTLxaAgAAeI8nPAAAwHs0PAAAwHs0PAAA\nwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHvF4zm5UqVK\nNisrK0mlICy5ubmSl5dnUnEt7iE/pfIeEuE+8hU/i5AIOTk5edbayu7xuBqerKwsmT9/fuKqQlrI\nzs5O2bW4h/yUyntIhPvIV/wsQiIYY9ZGOs5XWgAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0\nPAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHs0PAAAwHvFwy4A\nAIqy/v37qzx8+HCVGzVqFPjMRx99pHKtWrUSXxjgGZ7wAAAA79HwAAAA79HwAAAA7zHDA6TQtm3b\nVN6+fbvKkyZNUnnDhg2BNQYMGKByqVKlElQdUiE3N1flt956S2VjjMrLli0LrLFixQqVmeEpWlau\nXKnynj17VP7yyy9VvvHGGwNruPdZInTu3FnlsWPHqlyyZMmEXzMePOEBAADeo+EBAADeo+EBAADe\nY4YHSJA1a9aoPGzYsMA5s2fPVnnJkiVxX+fXX39V2d23BemtcuXKKrds2VLlDz74IJXlIM0sXbpU\n5ZEjRwbOefvtt1Xet2+fyj/99JPKkeZ1kjHD4967N9xwg8pPPfVU4DPly5dPeB1/hyc8AADAezQ8\n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\n",
            "text/plain": [
              "<Figure size 720x720 with 16 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "U50IFGiXEqEl",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "trainY = np_utils.to_categorical(y_train,10)\n",
        "testY = np_utils.to_categorical(y_test,10)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VTxwbpVbEqIy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "benimmodelim = keras.Sequential([\n",
        "    keras.layers.Flatten(input_shape=(28, 28)),\n",
        "    keras.layers.Dense(128, activation='relu'),\n",
        "    keras.layers.Dense(10, activation='softmax')\n",
        "])\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6qAAK-vgEtX_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "benimmodelim.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TWCqz2qnxVB2",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        },
        "outputId": "939179ce-af99-4816-d159-0aadbc8bbc6f"
      },
      "source": [
        "benimmodelim.summary()"
      ],
      "execution_count": 539,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_32\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "flatten_31 (Flatten)         (None, 784)               0         \n",
            "_________________________________________________________________\n",
            "dense_73 (Dense)             (None, 128)               100480    \n",
            "_________________________________________________________________\n",
            "dense_74 (Dense)             (None, 10)                1290      \n",
            "=================================================================\n",
            "Total params: 101,770\n",
            "Trainable params: 101,770\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "G1Njv4kOt7wn",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        },
        "outputId": "71c5c9b9-0ad8-4f76-b32b-cbaba57e8737"
      },
      "source": [
        "benimmodelim.fit(x_train, y_train, epochs=10 )\n"
      ],
      "execution_count": 540,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/10\n",
            "60000/60000 [==============================] - 8s 140us/step - loss: 2.3050 - acc: 0.1115\n",
            "Epoch 2/10\n",
            "60000/60000 [==============================] - 7s 120us/step - loss: 2.3017 - acc: 0.1122\n",
            "Epoch 3/10\n",
            "60000/60000 [==============================] - 7s 117us/step - loss: 2.3014 - acc: 0.1118\n",
            "Epoch 4/10\n",
            "60000/60000 [==============================] - 7s 117us/step - loss: 2.3009 - acc: 0.1129\n",
            "Epoch 5/10\n",
            "60000/60000 [==============================] - 7s 118us/step - loss: 2.2998 - acc: 0.1143\n",
            "Epoch 6/10\n",
            "60000/60000 [==============================] - 7s 121us/step - loss: 2.2980 - acc: 0.1158\n",
            "Epoch 7/10\n",
            "60000/60000 [==============================] - 7s 122us/step - loss: 2.2964 - acc: 0.1160\n",
            "Epoch 8/10\n",
            "60000/60000 [==============================] - 7s 122us/step - loss: 2.2937 - acc: 0.1191\n",
            "Epoch 9/10\n",
            "60000/60000 [==============================] - 7s 121us/step - loss: 2.2902 - acc: 0.1202\n",
            "Epoch 10/10\n",
            "60000/60000 [==============================] - 7s 121us/step - loss: 2.2863 - acc: 0.1223\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f7c4b4ced68>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 540
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zpbr9gXr04wx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "bd1c4c87-f7e9-4003-cc3b-5c95ce2a33a3"
      },
      "source": [
        "Test_kayiplari, test_sonuc = benimmodelim.evaluate(x_test,  y_test, verbose=2)\n",
        "\n",
        "print('Test sonucu doğruluğu=', test_sonuc)"
      ],
      "execution_count": 541,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Test sonucu doğruluğu= 0.1131\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "icFpu_nt04ug",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "1c2d1923-b108-4a2b-8faf-ac3f680c431b"
      },
      "source": [
        "y_test[0]"
      ],
      "execution_count": 542,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 542
        }
      ]
    }
  ]
}